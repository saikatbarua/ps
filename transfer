# azure-pipelines.yml
trigger:
  - main

parameters:
  - name: configFileName
    displayName: 'Override Configuration File Name'
    type: string
    default: ''
    help: 'Specify the filename for an override configuration file in the test directory. Leave empty to use only config.properties.'

stages:
  - stage: Build
    jobs:
      - job: LoadAndOverrideConfig
        displayName: 'Load and Override Configurations'
        pool:
          vmImage: 'windows-latest'
        
        steps:
          - script: |
              # Define the base directory
              BASE_DIR="C:\\Users\\UserName\\Desktop\\test"
              
              # Default configuration file
              CONFIG_FILE="${BASE_DIR}\\config.properties"
              
              # Optional override file if configFileName is provided
              if [ -n "${{ parameters.configFileName }}" ]; then
                OVERRIDE_FILE="${BASE_DIR}\\${{ parameters.configFileName }}"
                
                # Check if the override file exists
                if [ ! -f "$OVERRIDE_FILE" ]; then
                  echo "Error: Override file $OVERRIDE_FILE not found."
                  exit 1
                fi
              fi

              # Load properties from the config file and override if necessary
              declare -A properties
              
              # Function to load properties from a file into the 'properties' array
              load_properties() {
                local file=$1
                while IFS='=' read -r key value; do
                  if [[ ! "$key" =~ ^# && "$key" != "" ]]; then
                    properties[$key]=$value
                  fi
                done < "$file"
              }

              # Load properties from config.properties
              load_properties "$CONFIG_FILE"

              # If override file is specified, load its properties to override defaults
              if [ -n "$OVERRIDE_FILE" ]; then
                load_properties "$OVERRIDE_FILE"
                echo "Properties overridden with values from $OVERRIDE_FILE"
              else
                echo "No override file provided. Using values from $CONFIG_FILE."
              fi

              # Export each property as an Azure DevOps pipeline variable
              for key in "${!properties[@]}"; do
                echo "##vso[task.setvariable variable=$key]${properties[$key]}"
              done

              echo "Configuration loaded successfully."
            displayName: 'Load and Override Configuration Properties'
          
          # Example usage of loaded properties
          - script: |
              echo "Property1: $
